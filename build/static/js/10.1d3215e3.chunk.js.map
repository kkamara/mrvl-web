{"version":3,"sources":["components/Comics/ComicPage.jsx","redux/actions/singleComic.jsx"],"names":["connect","state","singleComic","dispatch","getFavComics","getComic","id","error","success","type","payload","comicActions","GET_COMIC_PENDING","marvelService","then","json","GET_COMIC_SUCCESS","data","catch","err","GET_COMIC_ERROR","comic","fetched","loading","pathname","window","location","slice","lastIndexOf","pageTitle","APP_NAME","useEffect","loadComic","loadFavComics","content","title","className","Comic","disablePrevPaginator","disableNextPaginator","Loader","Helmet","name","href","img","images","description","path","extension","__renderHeaderTags"],"mappings":"8MA4FeA,uBARS,SAAAC,GAAK,MAAK,CACjCC,YAAaD,EAAMC,YACnB,IAC0B,SAAAC,GAAQ,MAAK,CACvCC,aAAc,kBAAMD,EAASC,cAAe,EAC5CC,SAAU,SAAAC,GAAE,OAAIH,ECtFV,SAAkBG,GACrB,wDAAO,WAAMH,GAAQ,IAmBRI,EAOAC,EAAO,2EAzBiC,OAyBxCA,EAAO,SAACC,EAAMC,GACnB,MAAO,CACHD,OACAC,UAER,EAZSH,EAAK,SAACE,EAAMC,GACjB,MAAO,CACHD,OACAC,UAER,EAvBAP,EAaW,CACHM,KAdSE,IAAaC,oBAAmB,UAE1C,IAAIC,KAAiBR,SAASC,GAChCQ,MAAK,SAAAC,GACFZ,EACIK,EAAQG,IAAaK,kBAAmBD,EAAKE,KAAKA,MAE1D,IACCC,OAAM,SAAAC,GACHhB,EAASI,EAAMI,IAAaS,gBAAiBD,GACjD,IAAE,2CAqBT,mDAhCD,EAiCJ,CDoD0Bd,CAASC,GAAI,EACtC,GAEcN,EAjFG,SAAH,GAIR,IAHNI,EAAY,EAAZA,aACAC,EAAQ,EAARA,SACagB,EAAK,EAAlBnB,YAGee,EAA4BI,EAAnCA,MAAaC,EAAsBD,EAAtBC,QAASC,EAAaF,EAAbE,QACxBC,EAAWC,OAAOC,SAASF,SAC3BlB,EAAKkB,EAASG,MAAMH,EAASI,YAAY,KAAO,GAClDC,EAAS,aAASC,KAEtBC,qBAAU,WACTC,EAAU1B,GACV2B,GACD,GAAG,IAEH,IAAMD,EAAY,SAAC1B,GAClBD,EAASC,EACV,EAEM2B,EAAgB,WACrB7B,GACD,EAwBI8B,EAAU,KAqBd,OAnBIZ,IAAYC,GACfM,EAAYZ,EAAKkB,MAAQN,EACzBK,EACC,qBAAKE,UAAU,wBAAuB,SACrC,cAACC,EAAA,EAAK,CACLhB,MAAOJ,EACPqB,sBAAoB,EACpBC,sBAAoB,OAKvBL,GADWZ,GAAWC,EACZ,cAACiB,EAAA,EAAM,IAEP,qBAAKJ,UAAU,YAAW,SACnC,8DAIK,qCA3CoB,WAC1B,IAAa,IAATnB,EACH,OAAO,eAACwB,EAAA,EAAM,WACb,gCAAQZ,IACR,sBAAMa,KAAK,QAAQR,QAASL,IAC5B,sBAAMa,KAAK,MAAMR,QAAST,OAAOC,SAASiB,UAI5C,IAAMC,EAAM3B,EAAK4B,OAAO,GAExB,OAAO,eAACJ,EAAA,EAAM,WACb,gCAAQZ,IACR,sBAAMa,KAAK,QAAQR,QAASL,IAC5B,sBAAMa,KAAK,MAAMR,QAAST,OAAOC,SAASiB,OAC1C,sBAAMD,KAAK,cAAcR,QAASjB,EAAK6B,cACtCF,EACA,sBAAMF,KAAK,QAAQR,QAASU,EAAIG,KAAOH,EAAII,YAC3C,OAEH,CAwBEC,GACAf,IAEH,G","file":"static/js/10.1d3215e3.chunk.js","sourcesContent":["import React, { useEffect, } from \"react\"\nimport { connect, } from \"react-redux\"\nimport { Helmet, } from \"react-helmet\"\n\nimport { getComic, } from \"../../redux/actions/singleComic\"\nimport { getFavComics, } from \"../../redux/actions/comic\"\nimport Comic from '../Comic'\n\nimport Loader from \"../Loader\"\nimport { APP_NAME, } from \"../../constants\"\n\nconst ComicPage = ({ \n\tgetFavComics,\n\tgetComic, \n\tsingleComic: comic, \n}) => {\n\n\tconst { comic: data, fetched, loading, } = comic\n\tconst pathname = window.location.pathname\n\tconst id = pathname.slice(pathname.lastIndexOf('/') + 1)\n\tlet pageTitle = ` | ${APP_NAME}`\n\t\n\tuseEffect(() => {\n\t\tloadComic(id)\n\t\tloadFavComics()\n\t}, [])\n\n\tconst loadComic = (id) => {\n\t\tgetComic(id)\n\t}\n\n\tconst loadFavComics = () => {\n\t\tgetFavComics()\n\t}\n\n\tconst __renderHeaderTags = () => {\n\t\tif (data === false) {\n\t\t\treturn <Helmet>\n\t\t\t\t<title>{pageTitle}</title>\n\t\t\t\t<meta name=\"title\" content={pageTitle} />\n\t\t\t\t<meta name=\"url\" content={window.location.href} />\n\t\t\t</Helmet>\n\t\t}\n\t\t\n\t\tconst img = data.images[0]\n\n\t\treturn <Helmet>\n\t\t\t<title>{pageTitle}</title>\n\t\t\t<meta name=\"title\" content={pageTitle} />\n\t\t\t<meta name=\"url\" content={window.location.href} />\n\t\t\t<meta name=\"description\" content={data.description}/>\n\t\t\t{img ?\n\t\t\t\t<meta name=\"image\" content={img.path + img.extension} /> :\n\t\t\t\tnull}\n\t\t</Helmet>\n\t}\n\n\tlet content = null\n\n\tif (fetched && !loading) {\n\t\tpageTitle = data.title + pageTitle\n\t\tcontent = (\n\t\t\t<div className=\"container text-center\">\n\t\t\t\t<Comic \n\t\t\t\t\tcomic={data}\n\t\t\t\t\tdisablePrevPaginator\n\t\t\t\t\tdisableNextPaginator\n\t\t\t\t/>\n\t\t\t</div>\n\t\t)\n\t} else if (!fetched && loading) {\n\t\tcontent = <Loader />\n\t} else {\n\t\tcontent = <div className=\"container\">\n\t\t\t<div>Unknown error encountered</div>\n\t\t</div>\n\t}\n\n\treturn <>\n\t\t{__renderHeaderTags()}\n\t\t{content}\n\t</>\n}\n\nconst mapStateToProps = state => ({\n\tsingleComic: state.singleComic,\n})\nconst mapDispatchToProps = dispatch => ({\n\tgetFavComics: () => dispatch(getFavComics()),\n\tgetComic: id => dispatch(getComic(id)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComicPage)\n","import { comicActions, } from '../reducers/types'\nimport marvelService from \"../../service/marvelService\"\n\nexport function getComic(id) {\n    return async dispatch => {\n        dispatch(request(comicActions.GET_COMIC_PENDING))\n        \n        await (new marvelService()).getComic(id)\n            .then(json => {\n                dispatch(\n                    success(comicActions.GET_COMIC_SUCCESS, json.data.data)\n                )\n            })\n            .catch(err => {\n                dispatch(error(comicActions.GET_COMIC_ERROR, err))\n            })\n\n        function request(type) {\n            return {\n                type\n            }\n        }\n\n        function error(type, payload) {\n            return {\n                type,\n                payload\n            }\n        }\n\n        function success(type, payload) {\n            return {\n                type,\n                payload\n            }\n        }\n    }\n}"],"sourceRoot":""}