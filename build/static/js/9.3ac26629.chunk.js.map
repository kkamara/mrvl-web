{"version":3,"sources":["service/comicService.jsx","components/FavouriteComics/FavouriteComicsPage.jsx"],"names":["ComicService","key","comics","comicService","connect","state","comic","dispatch","getFavComics","fetchFavItems","favComics","fetched","loading","pageTitle","APP_NAME","useState","isOpenStatesPerComic","setisOpenStatesPerComic","useEffect","loadFavComics","content","className","ids","length","items","map","favComic","unFavComicCallback","disablePrevPaginator","shouldDisableLeftPaginator","disableNextPaginator","shouldDisableRightPaginator","openDefaultValue","openNextComic","isOpenStatesPerComicNew","forEach","_","k","openPrevComic","onCloseCallback"],"mappings":"oJACqBA,EAAY,4CAa5B,OAb4B,uDAC7B,SAA2BC,EAAKC,GAC5B,OAAKA,EAAOD,EAAM,EAItB,GAAC,yCAED,SAA4BA,EAAKC,GAC7B,OAAKA,EAAOD,EAAM,EAItB,KAAC,EAb4B,E,+HCU3BE,EAAe,IAAIH,IAoGVI,uBAPS,SAAAC,GAAK,MAAK,CAChCC,MAAOD,EAAMC,MACd,IAC0B,SAAAC,GAAQ,MAAK,CACvCC,aAAc,SAACC,GAAa,OAAKF,EAASC,YAAaC,GAAe,EACtE,GAEcL,EAlGa,SAAH,GAAkC,IAA5BI,EAAY,EAAZA,aAAcF,EAAK,EAALA,MACpCI,EAAiCJ,EAAjCI,UAAWC,EAAsBL,EAAtBK,QAASC,EAAaN,EAAbM,QACtBC,EAAS,6BAAyBC,KAExC,EAAwDC,mBAAS,MAAK,mBAA/DC,EAAoB,KAAEC,EAAuB,KAEpDC,qBAAU,WACTC,GAAc,EACf,GAAG,IAEH,IAAMA,EAAgB,SAACV,GACtBD,EAAaC,EACd,EAyDIW,EAAU,KAgBd,OAbCA,EADGT,IAAYC,EAEd,qBAAKS,UAAU,wBAAuB,SApDlCX,EAAUY,IAAIC,QAAWb,EAAUc,MAAMD,OAIvCb,EAAUc,MAAMC,KAAI,SAACC,EAAUzB,GAAG,OACxC,cAAC,IAAK,CAELK,MAAOoB,EACPjB,eAAe,EACfkB,mBAAoBR,EACpBS,qBAAsBzB,EAAa0B,2BAA2B5B,EAAKS,EAAUc,OAC7EM,qBAAsB3B,EAAa4B,4BAA4B9B,EAAKS,EAAUc,OAC9EQ,oBAAkBhB,IAAwBA,EAAqBO,SAASP,EAAqBf,GAC7FgC,cAAe,WACdhB,GAAwB,SAAAD,GACvB,IAAMkB,EAA0B,GAMhC,OALAxB,EAAUc,MAAMW,SAAQ,SAACC,EAAGC,GAC3BH,EAAwBG,IAAK,CAC9B,IACAH,EAAwBjC,IAAO,EAC/BiC,EAAwBjC,EAAM,IAAK,EAC5BiC,CACR,GACD,EACAI,cAAe,WACdrB,GAAwB,SAAAD,GACvB,IAAMkB,EAA0B,GAMhC,OALAxB,EAAUc,MAAMW,SAAQ,SAACC,EAAGC,GAC3BH,EAAwBG,IAAK,CAC9B,IACAH,EAAwBjC,IAAO,EAC/BiC,EAAwBjC,EAAM,IAAK,EAC5BiC,CACR,GACD,EACAK,gBAAiB,WAChBtB,GAAwB,SAAAD,GACvB,IAAMkB,EAA0B,GAIhC,OAHAxB,EAAUc,MAAMW,SAAQ,SAACC,EAAGC,GAC3BH,EAAwBG,IAAK,CAC9B,IACOH,CACR,GACD,GArCKjC,EAsCJ,IA3CK,qEAuDGU,GAAWC,EACZ,cAAC,IAAM,IAEP,qBAAKS,UAAU,YAAW,SACnC,8DAIK,qCAtEC,cAAC,IAAM,UACb,gCAAQR,MAuERO,IAEH,G","file":"static/js/9.3ac26629.chunk.js","sourcesContent":["\nexport default class ComicService{\n    shouldDisableLeftPaginator(key, comics) {\n        if (!comics[key - 1]) {\n            return true\n        }\n        return false\n    }\n    \n    shouldDisableRightPaginator(key, comics) {\n        if (!comics[key + 1]) {\n            return true\n        }\n        return false\n    }\n}\n","import React, { useEffect, useState, } from \"react\"\nimport { connect, } from \"react-redux\"\nimport { Helmet, } from \"react-helmet\"\nimport ComicService from '../../service/comicService'\n\nimport { getFavComics, } from \"../../redux/actions/comic\"\nimport Comic from '../Comic'\n\nimport Loader from \"../Loader\"\nimport { APP_NAME, } from \"../../constants\"\n\nconst comicService = new ComicService\n\nconst FavouriteComicsPage = ({ getFavComics, comic, }) => {\n\tconst { favComics, fetched, loading, } = comic\n\tconst pageTitle = `Favourite Comics | ${APP_NAME}`\n\n\tconst [isOpenStatesPerComic, setisOpenStatesPerComic] = useState(null)\n\n\tuseEffect(() => {\n\t\tloadFavComics(true)\n\t}, [])\n\n\tconst loadFavComics = (fetchFavItems) => {\n\t\tgetFavComics(fetchFavItems)\n\t}\n\n\tconst __renderHeaderTags = () => {\n\t\treturn <Helmet>\n\t\t\t<title>{pageTitle}</title>\n\t\t</Helmet>\n\t}\n\t\n\tconst __renderFavComics = () => {\n\t\tif (!favComics.ids.length || !favComics.items.length) {\n\t\t\treturn <p>No results to display your query.</p>\n\t\t}\n\t\t\n\t\treturn favComics.items.map((favComic, key) =>\n\t\t\t<Comic \n\t\t\t\tkey={key} \n\t\t\t\tcomic={favComic} \n\t\t\t\tfetchFavItems={true} \n\t\t\t\tunFavComicCallback={loadFavComics} \n\t\t\t\tdisablePrevPaginator={comicService.shouldDisableLeftPaginator(key, favComics.items)}\n\t\t\t\tdisableNextPaginator={comicService.shouldDisableRightPaginator(key, favComics.items)}\n\t\t\t\topenDefaultValue={isOpenStatesPerComic && isOpenStatesPerComic.length ? isOpenStatesPerComic[key] : false}\n\t\t\t\topenNextComic={() => { \n\t\t\t\t\tsetisOpenStatesPerComic(isOpenStatesPerComic => {\n\t\t\t\t\t\tconst isOpenStatesPerComicNew = []\n\t\t\t\t\t\tfavComics.items.forEach((_, k) => {\n\t\t\t\t\t\t\tisOpenStatesPerComicNew[k] = false\n\t\t\t\t\t\t})\n\t\t\t\t\t\tisOpenStatesPerComicNew[key] = false; \n\t\t\t\t\t\tisOpenStatesPerComicNew[key + 1] = true; \n\t\t\t\t\t\treturn isOpenStatesPerComicNew\n\t\t\t\t\t})\n\t\t\t\t}}\n\t\t\t\topenPrevComic={() => { \n\t\t\t\t\tsetisOpenStatesPerComic(isOpenStatesPerComic => {\n\t\t\t\t\t\tconst isOpenStatesPerComicNew = []\n\t\t\t\t\t\tfavComics.items.forEach((_, k) => {\n\t\t\t\t\t\t\tisOpenStatesPerComicNew[k] = false\n\t\t\t\t\t\t})\n\t\t\t\t\t\tisOpenStatesPerComicNew[key] = false; \n\t\t\t\t\t\tisOpenStatesPerComicNew[key - 1] = true; \n\t\t\t\t\t\treturn isOpenStatesPerComicNew\t\t\t\t\n\t\t\t\t\t})\n\t\t\t\t}}\n\t\t\t\tonCloseCallback={() => { \n\t\t\t\t\tsetisOpenStatesPerComic(isOpenStatesPerComic => {\n\t\t\t\t\t\tconst isOpenStatesPerComicNew = []\n\t\t\t\t\t\tfavComics.items.forEach((_, k) => {\n\t\t\t\t\t\t\tisOpenStatesPerComicNew[k] = false\n\t\t\t\t\t\t})\n\t\t\t\t\t\treturn isOpenStatesPerComicNew\n\t\t\t\t\t})\n\t\t\t\t}}\n\t\t\t/>\n\t\t)\n\t}\n\t\n\tlet content = null\n\t\n\tif (fetched && !loading) {\n\t\tcontent = (\n\t\t\t<div className=\"container text-center\">\n\t\t\t\t{__renderFavComics()}\n\t\t\t</div>\n\t\t)\n\t} else if (!fetched && loading) {\n\t\tcontent = <Loader />\n\t} else {\n\t\tcontent = <div className=\"container\">\n\t\t\t<div>Unknown error encountered</div>\n\t\t</div>\n\t}\n\n\treturn <>\n\t\t{__renderHeaderTags()}\n\t\t{content}\n\t</>\n}\n\nconst mapStateToProps = state => ({\n  comic: state.comic,\n})\nconst mapDispatchToProps = dispatch => ({\n\tgetFavComics: (fetchFavItems) => dispatch(getFavComics(fetchFavItems)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FavouriteComicsPage)\n"],"sourceRoot":""}